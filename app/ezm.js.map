{"version":3,"sources":["webpack:///./main.ts","webpack:///./ezm.css?8cc1","webpack:///./ezm.css","webpack:///./t.ts","webpack:///./ficache.ts","webpack:///./components/sidebar.ts","webpack:///./db.ts","webpack:///./models/account.ts","webpack:///./accountStore.ts","webpack:///./components/accountDisplay.ts","webpack:///./components/accountDialog.ts","webpack:///./components/xeditable.ts","webpack:///./enumEx.ts"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACpDA;;AAEA;AACA;AACA;AACA;AACA,iDAAuG;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA,iCAAgC,UAAU,EAAE;AAC5C,E;;;;;;;ACjBA;AACA,2CAA0C,qBAAqB,iBAAiB,yBAAyB,GAAG,qBAAqB,iBAAiB,GAAG,sBAAsB,kBAAkB,oCAAoC,GAAG,yCAAyC,eAAe,GAAG,oBAAoB,eAAe,oCAAoC,GAAG,yCAAyC,kBAAkB,GAAG,Q;;;;;;;ACDva;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;;;;;;;ACRA;AACA;AACA;AACA,8CAA6C,8BAA8B,EAAE;AAC7E,wCAAuC,oBAAoB,EAAE;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACdA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,2CAA2C;AACnE;AACA,UAAS;AACT;AACA,0FAAyF,mBAAmB;AAC5G,UAAS;AACT,oDAAmD,cAAc,8CAA8C,eAAe,wFAAwF,qBAAqB,kFAAkF,mBAAmB,qDAAqD,kCAAkC,eAAe,EAAE,gBAAgB,uCAAuC,qBAAqB,eAAe;AACnhB;AACA;AACA,wBAAuB,mBAAmB;AAC1C;AACA;AACA,EAAC;AACD;AACA;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAkE,mBAAmB,EAAE;AACvF,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrBA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,kDAAkD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC,gCAAgC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,gCAAgC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;;;;;;;;;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,cAAa;AACb;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;;;ACnDA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC,kBAAkB;AACzD;AACA;AACA,EAAC;AACD;AACA;;;;;;;;;ACpBA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,yEAAwE,uCAAuC,EAAE;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC,qBAAqB;AAC1D,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS,8BAA8B,0BAA0B,kBAAkB,wDAAwD;AAC3I;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS,yEAAyE,oBAAoB,2IAA2I,4BAA4B,UAAU,oCAAoC,yCAAyC,yDAAyD;AAC7Z;AACA;AACA;AACA;AACA,wBAAuB,yCAAyC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA,wBAAuB,8CAA8C;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA,gCAA+B,aAAa,gCAAgC,SAAS,kBAAkB,0BAA0B;AACjI;AACA;AACA;AACA;AACA;AACA,wGAAuG,sCAAsC,EAAE;AAC/I;AACA;AACA,0BAAyB,mBAAmB;AAC5C,sBAAqB,QAAQ;AAC7B;AACA;AACA;AACA,kBAAiB,QAAQ,2CAA2C;AACpE,sBAAqB,QAAQ,uBAAuB,6BAA6B;AACjF,sBAAqB,QAAQ,UAAU,kCAAkC;AACzE,sBAAqB,QAAQ,qBAAqB,gFAAgF;AAClI,sBAAqB,QAAQ,UAAU,iCAAiC;AACxE;AACA,UAAS;AACT;AACA;AACA;AACA,sCAAqC,yBAAyB;AAC9D,UAAS;AACT;AACA;AACA;AACA;AACA,kBAAiB,QAAQ;AACzB;AACA,cAAa;AACb,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA,cAAa;AACb,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA,cAAa;AACb,kBAAiB,QAAQ,UAAU,kDAAkD;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA,oFAAmF,2BAA2B,EAAE;AAChH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;;;;;;;;;AC7RA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD","sourcesContent":["///<reference path=\"project.d.ts\"/>\nrequire(\"./ezm.css\");\nvar Input = ReactBootstrap.Input, ListGroup = ReactBootstrap.ListGroup, ListGroupItem = ReactBootstrap.ListGroupItem, OverlayTrigger = ReactBootstrap.OverlayTrigger, Popover = ReactBootstrap.Popover, Table = ReactBootstrap.Table, Grid = ReactBootstrap.Grid, Col = ReactBootstrap.Col;\nvar t = require(\"./t\");\nvar ficache = require(\"./ficache\");\nvar Sidebar = require(\"./components/sidebar\");\nvar db = require(\"./db\");\nvar accountListData = [\n    {\n        name: \"UWCU\",\n        notes: \"\",\n        accounts: [\n            {\n                id: \"12345\",\n                name: \"checking\",\n                type: \"checking\",\n                accountNumber: \"12345\"\n            },\n            {\n                id: \"12345b\",\n                name: \"savings\",\n                type: \"savings\",\n                accountNumber: \"12345b\"\n            }\n        ]\n    },\n    {\n        name: \"My CC Company\",\n        notes: \"\",\n        accounts: [\n            {\n                id: \"54321\",\n                name: \"visa\",\n                type: \"creditcard\",\n                accountNumber: \"54321\"\n            },\n        ]\n    },\n];\nfunction reportError(err) {\n    console.log(err);\n}\nfunction main() {\n    Promise.all([\n        t.init(),\n        ficache.init(),\n        db.open(),\n    ])\n        .then(main)\n        .catch(reportError);\n}\n;\nmodule.exports = main;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./main.ts\n ** module id = 0\n ** module chunks = 0\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!/Users/aolson/Developer/ezm/node_modules/css-loader/index.js!/Users/aolson/Developer/ezm/src/ezm.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!/Users/aolson/Developer/ezm/node_modules/style-loader/addStyles.js\")(content, {});\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tmodule.hot.accept(\"!!/Users/aolson/Developer/ezm/node_modules/css-loader/index.js!/Users/aolson/Developer/ezm/src/ezm.css\", function() {\n\t\tvar newContent = require(\"!!/Users/aolson/Developer/ezm/node_modules/css-loader/index.js!/Users/aolson/Developer/ezm/src/ezm.css\");\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\tupdate(newContent);\n\t});\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./ezm.css\n ** module id = 27\n ** module chunks = 0\n **/","exports = module.exports = require(\"/Users/aolson/Developer/ezm/node_modules/css-loader/cssToString.js\")();\nexports.push([module.id, \"\\n.drag-handle {\\n  color: lightgray;\\n  cursor: grab;\\n  cursor: -webkit-grab;\\n}\\n\\n.sortable-ghost {\\n  opacity: 0.4;\\n}\\n\\n\\n.example-enter {\\n  opacity: 0.01;\\n  transition: opacity .5s ease-in;\\n}\\n\\n.example-enter.example-enter-active {\\n  opacity: 1;\\n}\\n\\n.example-leave {\\n  opacity: 1;\\n  transition: opacity .5s ease-in;\\n}\\n\\n.example-leave.example-leave-active {\\n  opacity: 0.01;\\n}\", \"\"]);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/css-loader!./ezm.css\n ** module id = 28\n ** module chunks = 0\n **/","///<reference path=\"project.d.ts\"/>\nvar i18n = require(\"i18next-client\");\nexports.t = i18n.t;\nfunction init() {\n    return i18n.init({\n        resGetPath: 'locales/__ns__.__lng__.json'\n    });\n}\nexports.init = init;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./t.ts\n ** module id = 29\n ** module chunks = 0\n **/","/// <reference path=\"project.d.ts\"/>\nvar filist = require(\"filist\");\nfunction init() {\n    filist = _.sortBy(filist, function (fi) { return fi.name.toLowerCase(); });\n    filist.forEach(function (fi, idx) { return fi.id = idx; });\n}\nexports.init = init;\nfunction get(id) {\n    return filist[id];\n}\nexports.get = get;\nfunction byName() {\n    return filist;\n}\nexports.byName = byName;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./ficache.ts\n ** module id = 30\n ** module chunks = 0\n **/","/// <reference path=\"../project.d.ts\"/>\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar Button = ReactBootstrap.Button, ListGroupItem = ReactBootstrap.ListGroupItem, ModalTrigger = ReactBootstrap.ModalTrigger;\nvar Icon = require(\"react-fa\");\nvar t_1 = require(\"../t\");\nvar accountStore_1 = require(\"../accountStore\");\nvar accountDisplay_1 = require(\"./accountDisplay\");\nvar accountDialog_1 = require(\"./accountDialog\");\nvar SidebarClass = (function (_super) {\n    __extends(SidebarClass, _super);\n    function SidebarClass() {\n        _super.call(this);\n        this.state = {\n            active: \"home\",\n            accounts: accountStore_1.AccountStore.getDefaultData(),\n        };\n    }\n    SidebarClass.prototype.render = function () {\n        var selectionProps = function (id) {\n            var active = (id === this.state.active);\n            return {\n                key: id,\n                eventKey: id,\n                active: active,\n                onClick: (active ? null : this.onSetActive),\n                style: { cursor: (active ? \"default\" : \"pointer\") },\n            };\n        }.bind(this);\n        var accounts = this.state.accounts.map(function (account) {\n            return (accountDisplay_1.AccountDisplay(_.merge(selectionProps(account.id), { account: account })));\n        });\n        return (React.DOM.div(null, ListGroupItem({ ref: \"root\" }, ListGroupItem(selectionProps(\"home\"), Icon({ name: \"home\" }), \" \", t_1.t(\"sidebar.home\")), accounts, ListGroupItem(selectionProps(\"budget\"), Icon({ name: \"area-chart\" }), \" \", t_1.t(\"sidebar.budget\")), ListGroupItem(selectionProps(\"calendar\"), Icon({ name: \"calendar\" }), \" \", t_1.t(\"sidebar.calendar\"))), React.DOM.span({ className: \"pull-right\", style: { marginTop: 5 } }, ModalTrigger({ modal: accountDialog_1.AccountDialog }, Button(null, Icon({ name: \"plus\" }))))));\n    };\n    SidebarClass.prototype.onSetActive = function (eventKey) {\n        this.setState({ active: eventKey });\n    };\n    return SidebarClass;\n})(React.Component);\nexports.SidebarClass = SidebarClass;\nexports.Sidebar = React.createFactory(SidebarClass);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./components/sidebar.ts\n ** module id = 31\n ** module chunks = 0\n **/","/// <reference path=\"project.d.ts\"/>\nvar storeOptions = {\n    name: \"EasyMoney\"\n};\nexports.Store = new Updraft.Store();\nvar openCallbacks = [];\nfunction onOpen(callback) {\n    openCallbacks.push(callback);\n}\nexports.onOpen = onOpen;\nfunction open() {\n    require(\"./models/account\");\n    return exports.Store.open(storeOptions)\n        .then(function () {\n        return Promise.all(openCallbacks.map(function (callback) { return callback(); }));\n    });\n}\nexports.open = open;\nfunction Id() {\n    return Updraft.Column.Int().Key();\n}\nexports.Id = Id;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./db.ts\n ** module id = 32\n ** module chunks = 0\n **/","/// <reference path=\"../project.d.ts\"/>\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar _a = Updraft.Column, Int = _a.Int, Text = _a.Text, Bool = _a.Bool, Enum = _a.Enum, Ptr = _a.Ptr;\nvar hash = require(\"string-hash\");\nvar t_1 = require(\"../t\");\nvar db_1 = require(\"../db\");\n(function (AccountType) {\n    AccountType[AccountType[\"CHECKING\"] = 0] = \"CHECKING\";\n    AccountType[AccountType[\"SAVINGS\"] = 1] = \"SAVINGS\";\n    AccountType[AccountType[\"CREDITCARD\"] = 2] = \"CREDITCARD\";\n})(exports.AccountType || (exports.AccountType = {}));\nvar AccountType = exports.AccountType;\nfunction AccountType_t(val) {\n    return t_1.t(\"AccountTypes.\" + AccountType[val]);\n}\nexports.AccountType_t = AccountType_t;\nvar Institution = (function (_super) {\n    __extends(Institution, _super);\n    function Institution() {\n        _super.call(this);\n    }\n    Institution.get = function (id) { throw new Error(\"overwritten\"); };\n    Institution.prototype.assignId = function () {\n        if (!this.id) {\n            this.id = hash(Date.now().toString());\n        }\n    };\n    Institution.tableName = \"institutions\";\n    Institution.columns = {\n        id: db_1.Id(),\n        name: Text(),\n        web: Text(),\n        address: Text(),\n        notes: Text(),\n        online: Bool().Default(true),\n        fid: Text(),\n        org: Text(),\n        ofx: Text(),\n        username: Text(),\n        password: Text(),\n    };\n    return Institution;\n})(Updraft.Instance);\nexports.Institution = Institution;\ndb_1.Store.addClass(Institution);\nvar Account = (function (_super) {\n    __extends(Account, _super);\n    function Account() {\n        _super.apply(this, arguments);\n    }\n    Account.get = function (id) { throw new Error(\"overwritten\"); };\n    Account.prototype.assignId = function () {\n        if (!this.id) {\n            console.assert(!!this.institution);\n            console.assert(!!this.number);\n            this.id = hash(this.institution.id + \" \" + this.number);\n        }\n    };\n    Account.tableName = \"accounts\";\n    Account.columns = {\n        id: db_1.Id(),\n        institution: Ptr(Institution),\n        name: Text(),\n        type: Enum(AccountType),\n        visible: Bool().Default(true),\n        number: Text(),\n    };\n    return Account;\n})(Updraft.Instance);\nexports.Account = Account;\ndb_1.Store.addClass(Account);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./models/account.ts\n ** module id = 102\n ** module chunks = 0\n **/","/// <reference path='project.d.ts'/>\nvar db = require(\"./db\");\nvar account_1 = require(\"./models/account\");\nvar actions = Reflux.createActions([\n    \"addInstitution\",\n    \"addAccount\",\n]);\nvar idServer = 1;\nvar institutions = [];\nvar accounts = [];\nexports.AccountStore = Reflux.createStore({\n    listenables: actions,\n    actions: actions,\n    onDbOpen: function () {\n        return Promise.all([\n            account_1.Institution.all.get().then(function (results) {\n                institutions = results;\n                var ids = _.pluck(results, \"id\");\n                ids.push(0);\n                idServer = _.max(ids) + 1;\n            }),\n            account_1.Account.all.get().then(function (results) {\n                accounts = results;\n            }),\n        ]);\n    },\n    save: function (institution, accounts) {\n        institution.assignId();\n        _.forEach(accounts, function (account) {\n            account.institution = institution;\n            account.assignId();\n        });\n        return (_a = db.Store).save.apply(_a, [institution].concat(accounts));\n        var _a;\n    },\n    onAddInstitution: function (newInstitution) {\n        console.assert(!newInstitution.id);\n        newInstitution.id = idServer++;\n        console.log(\"onAddInstitution\", newInstitution);\n        db.Store.save(newInstitution);\n        accounts.push(newInstitution);\n        this.trigger(accounts);\n    },\n    onAddAccount: function (newAccount) {\n        console.log(\"onAddAccount\", newAccount);\n    },\n    getDefaultData: function () {\n        console.log(\"getDefaultData\");\n        return accounts;\n    }\n});\ndb.onOpen(exports.AccountStore.onDbOpen);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./accountStore.ts\n ** module id = 117\n ** module chunks = 0\n **/","/// <reference path=\"../project.d.ts\"/>\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar ListGroupItem = ReactBootstrap.ListGroupItem;\nvar AccountDisplayClass = (function (_super) {\n    __extends(AccountDisplayClass, _super);\n    function AccountDisplayClass() {\n        _super.apply(this, arguments);\n    }\n    AccountDisplayClass.prototype.render = function () {\n        //var onClick = this.onClick;\n        return (ListGroupItem(_.merge({ bsSize: \"small\" }, this.props), this.props.account.name));\n    };\n    return AccountDisplayClass;\n})(React.Component);\nexports.AccountDisplayClass = AccountDisplayClass;\nexports.AccountDisplay = React.createFactory(AccountDisplayClass);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./components/accountDisplay.ts\n ** module id = 118\n ** module chunks = 0\n **/","/// <reference path=\"../project.d.ts\"/>\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar clone = require(\"clone\");\nvar Panel = ReactBootstrap.Panel, Button = ReactBootstrap.Button, Input = ReactBootstrap.Input, Modal = ReactBootstrap.Modal, Row = ReactBootstrap.Row, Col = ReactBootstrap.Col;\nvar Icon = require(\"react-fa\");\nvar access = require(\"safe-access\");\nvar t_1 = require(\"../t\");\nvar ficache = require(\"../ficache\");\nvar xeditable_1 = require(\"./xeditable\");\nvar account_1 = require(\"../models/account\");\nvar enumEx_1 = require(\"../enumEx\");\nvar accountStore_1 = require(\"../accountStore\");\nvar Keys = [\n    \"name\",\n    \"web\",\n    \"address\",\n    \"notes\",\n    \"institution\",\n    \"online\",\n    \"fid\",\n    \"org\",\n    \"ofx\",\n    \"username\",\n    \"password\",\n];\nfunction ValidateNotEmpty(value) {\n    if ($.trim(value) === \"\") {\n        return t_1.t(\"accountDialog.validateNotEmpty\");\n    }\n}\nvar AccountDialogClass = (function (_super) {\n    __extends(AccountDialogClass, _super);\n    function AccountDialogClass(props) {\n        var _this = this;\n        _super.call(this, props);\n        this.onSubmit = function () {\n            var institution = new account_1.Institution();\n            Keys.forEach(function (key) {\n                institution[key] = _this.state[key];\n            });\n            var accounts = _this.state.accounts.map(function (account) { return new account_1.Account(account); });\n            accountStore_1.AccountStore.save(institution, accounts);\n        };\n        var src = this.props.institution || new account_1.Institution();\n        this.state = {\n            accounts: clone(this.props.accounts) || [],\n            addAccountName: \"\",\n            addAccountNumber: 0,\n            addAccountType: t_1.t(\"accountDialog.add.typePlaceholder\"),\n            name: null,\n        };\n        Keys.forEach(function (key) {\n            return _this.state[key] = (typeof (src[key]) === \"undefined\" ? \"\" : src[key]);\n        });\n    }\n    AccountDialogClass.prototype.render = function () {\n        var title = this.props.id ? t_1.t(\"accountDialog.editTitle\") : t_1.t(\"accountDialog.addTitle\");\n        var canSave = this.state.name ? true : false;\n        var institutionOptions = ficache.byName().map(function (fi) {\n            var id = fi.id.toString();\n            return React.DOM.option({ key: id, value: id }, fi.name);\n        });\n        var inputClasses = {\n            labelClassName: \"col-xs-2\",\n            wrapperClassName: \"col-xs-10\",\n        };\n        return (Modal(_.merge({\n            title: title,\n            animation: true,\n            backdrop: \"static\",\n            keyboard: false,\n            trigger: \"focus\",\n        }, this.props), React.DOM.div({ className: \"modal-body\" }, React.DOM.form({ onSubmit: this.onSubmit, className: \"form-horizontal\" }, Input({\n            ref: \"institution\",\n            type: \"select\",\n            label: t_1.t(\"accountDialog.institutionLabel\"),\n            help: t_1.t(\"accountDialog.institutionHelp\"),\n            defaultValue: this.props.institution,\n            wrapperClassName: \"col-xs-10\",\n            labelClassName: \"col-xs-2\"\n        }, React.DOM.option(), institutionOptions), React.DOM.hr(), Input(_.merge({\n            type: \"text\",\n            label: t_1.t(\"accountDialog.nameLabel\"),\n            help: t_1.t(\"accountDialog.nameHelp\"),\n            placeholder: t_1.t(\"accountDialog.namePlaceholder\"),\n            defaultValue: this.props.institution,\n            wrapperClassName: \"col-xs-10\",\n            labelClassName: \"col-xs-2\"\n        }, inputClasses)), Input(_.merge({\n            type: \"text\",\n            label: t_1.t(\"accountDialog.webLabel\"),\n            placeholder: t_1.t(\"accountDialog.webPlaceholder\"),\n            defaultValue: this.props.institution.web,\n        }, inputClasses)), Input(_.merge({\n            type: \"textarea\",\n            rows: 4,\n            label: t_1.t(\"accountDialog.addressLabel\"),\n            placeholder: t_1.t(\"accountDialog.addressPlaceholder\"),\n            defaultValue: this.props.institution.address,\n        }, inputClasses)), Input(_.merge({\n            type: \"textarea\",\n            rows: 4,\n            label: t_1.t(\"accountDialog.notesLabel\"),\n            placeholder: t_1.t(\"accountDialog.notesPlaceholder\"),\n            defaultValue: this.props.institution.notes,\n        }, inputClasses)), React.DOM.hr(), Input({\n            type: \"checkbox\",\n            label: t_1.t(\"accountDialog.enableOnline\"),\n            wrapperClassName: \"col-xs-12\"\n        }), this.renderOnlineFields(inputClasses), React.DOM.hr(), Input(_.merge({ label: \"Accounts\" }, inputClasses), this.renderAccounts(), (this.state.accounts.length ? React.DOM.hr() : null), this.renderAddAccountForm()), React.DOM.div({ className: \"modal-footer\" }, Button({ onClick: this.props.onRequestHide }, t_1.t(\"accountDialog.close\")), Button({ bsStyle: \"primary\", type: \"submit\", disabled: !canSave }, t_1.t(\"accountDialog.save\")))))));\n    };\n    AccountDialogClass.prototype.renderOnlineFields = function (inputClasses) {\n        if (this.state.online) {\n            return (React.DOM.div(null, [\n                Panel({ header: t_1.t(\"accountDialog.ofxInfo\") }, [\n                    Input(_.merge({\n                        type: \"text\",\n                        label: t_1.t(\"accountDialog.fidLabel\"),\n                        help: t_1.t(\"accountDialog.fidHelp\"),\n                        placeholder: t_1.t(\"accountDialog.fidPlaceholder\"),\n                        defaultValue: this.props.institution.fid,\n                    }, inputClasses)),\n                    Input(_.merge({\n                        type: \"text\",\n                        label: t_1.t(\"accountDialog.orgLabel\"),\n                        help: t_1.t(\"accountDialog.orgHelp\"),\n                        placeholder: t_1.t(\"accountDialog.orgPlaceholder\"),\n                        defaultValue: this.props.institution.org,\n                    }, inputClasses)),\n                    Input(_.merge({\n                        type: \"text\",\n                        label: t_1.t(\"accountDialog.ofxLabel\"),\n                        help: t_1.t(\"accountDialog.ofxHelp\"),\n                        placeholder: t_1.t(\"accountDialog.ofxPlaceholder\"),\n                        defaultValue: this.props.institution.ofx,\n                    }, inputClasses)),\n                ]),\n                Panel({ header: t_1.t(\"accountDialog.userpassInfo\") }, [\n                    Input(_.merge({\n                        type: \"text\",\n                        label: t_1.t(\"accountDialog.usernameLabel\"),\n                        help: t_1.t(\"accountDialog.usernameHelp\"),\n                        placeholder: t_1.t(\"accountDialog.usernamePlaceholder\"),\n                        defaultValue: this.props.institution.username,\n                    }, inputClasses)),\n                    Input(_.merge({\n                        type: \"text\",\n                        label: t_1.t(\"accountDialog.passwordLabel\"),\n                        help: t_1.t(\"accountDialog.passwordHelp\"),\n                        placeholder: t_1.t(\"accountDialog.passwordPlaceholder\"),\n                        defaultValue: this.props.institution.password,\n                    }, inputClasses)),\n                ]),\n                Input(_.merge({ label: \" \" }, inputClasses), Row(null, Col({ xs: 12 }, React.DOM.span({ className: \"pull-right\" }, Button(null, t_1.t(\"accountDialog.getAccountList\")))))),\n            ]));\n        }\n    };\n    AccountDialogClass.prototype.renderAccounts = function () {\n        var _this = this;\n        var accountTypeOptions = enumEx_1.EnumEx.getValues(account_1.AccountType).map(function (type) { return account_1.AccountType_t(type); });\n        return this.state.accounts.map(function (acct) {\n            var typeDisplay = account_1.AccountType_t(acct.type);\n            return (Row({ key: acct.number }, [\n                Col({ xs: 1 }, Button({\n                    bsStyle: \"link\",\n                    onClick: _this.toggleVis.bind(_this, acct),\n                    title: t_1.t(\"accountDialog.toggleVisTooltip\"),\n                }, Icon({ name: acct.visible ? \"eye\" : \"eye-slash\" }))),\n                Col({ xs: 2 }, xeditable_1.XSelect({ source: accountTypeOptions }, typeDisplay)),\n                Col({ xs: 3 }, Button({ bsStyle: \"link\", disabled: true }, acct.number)),\n                Col({ xs: 3 }, xeditable_1.XText({ title: t_1.t(\"accountDialog.add.namePlaceholder\"), validate: ValidateNotEmpty }, acct.name)),\n                Col({ xs: 1 }, Button({ bsStyle: \"link\", onClick: null }, \"Remove\"))\n            ]));\n        });\n    };\n    AccountDialogClass.prototype.renderAddAccountForm = function () {\n        var accountTypeOptions = enumEx_1.EnumEx.map(account_1.AccountType, function (name, val) {\n            return React.DOM.option({ key: name, value: name }, account_1.AccountType_t(val));\n        });\n        var btnEnabled = (this.state.addAccountType !== t_1.t(\"accountDialog.add.typePlaceholder\")) &&\n            (this.state.addAccountNumber !== 0) &&\n            (this.state.addAccountName !== \"\");\n        return (Row(null, [\n            Col({ xs: 3 }, React.DOM.select({\n                className: \"form-control\"\n            }, accountTypeOptions)),\n            Col({ xs: 3 }, React.DOM.input({\n                type: \"text\",\n                className: \"form-control\",\n                placeholder: t_1.t(\"accountDialog.add.idPlaceholder\")\n            })),\n            Col({ xs: 3 }, React.DOM.input({\n                type: \"text\",\n                className: \"form-control\",\n                placeholder: t_1.t(\"accountDialog.add.namePlaceholder\")\n            })),\n            Col({ xs: 1 }, Button({ disabled: !btnEnabled, onClick: this.addAccount }, t_1.t(\"accountDialog.addAccount\")))\n        ]));\n    };\n    AccountDialogClass.prototype.addAccount = function () {\n        this.state.accounts.push({\n            type: account_1.AccountType[this.state.addAccountType],\n            number: this.state.addAccountNumber,\n            name: this.state.addAccountName,\n            visible: true\n        });\n        this.setState({\n            addAccountType: t_1.t(\"accountDialog.add.typePlaceholder\"),\n            addAccountNumber: 0,\n            addAccountName: \"\",\n        });\n    };\n    AccountDialogClass.prototype.toggleVis = function (acct) {\n        acct.visible = !acct.visible;\n        this.forceUpdate();\n    };\n    AccountDialogClass.prototype.componentDidMount = function () {\n        var $institution = $(React.findDOMNode(this.refs[\"institution\"]));\n        $institution.select2({\n            placeholder: t_1.t(\"accountDialog.institutionPlaceholder\"),\n            allowClear: true\n        });\n        $institution.data(\"prev\", $institution.val());\n        $institution.change(this.onInstitutionChange);\n    };\n    AccountDialogClass.prototype.onInstitutionChange = function () {\n        var _this = this;\n        React.DOM.select;\n        var institution = React.findDOMNode(this.refs[\"institution\"]);\n        var $institution = $(institution);\n        var prev = $institution.data(\"prev\");\n        $institution.data(\"prev\", $institution.val());\n        var oldfi = ficache.get(prev);\n        var value = institution.options[institution.selectedIndex].value;\n        var state = { institution: value };\n        var newfi = ficache.get(value);\n        var initField = function (stateKey, fiProp) {\n            fiProp = fiProp || stateKey;\n            var getValue = (typeof fiProp === \"function\" ? fiProp : function (fi) { return access(fi, fiProp); });\n            if (!_this.state[stateKey] || _this.state[stateKey] === getValue(oldfi)) {\n                state[stateKey] = getValue(newfi);\n            }\n        };\n        initField(\"name\");\n        initField(\"web\", \"profile.siteURL\");\n        initField(\"address\", function (fi) {\n            var address = \"\";\n            if (fi && fi.profile) {\n                if (fi.profile.address1) {\n                    address += fi.profile.address1 + \"\\n\";\n                }\n                if (fi.profile.address2) {\n                    address += fi.profile.address2 + \"\\n\";\n                }\n                if (fi.profile.address3) {\n                    address += fi.profile.address3 + \"\\n\";\n                }\n                if (fi.profile.city) {\n                    address += fi.profile.city + \", \";\n                }\n                if (fi.profile.state) {\n                    address += fi.profile.state + \" \";\n                }\n                if (fi.profile.zip) {\n                    address += fi.profile.zip + \"\\n\";\n                }\n                if (fi.profile.country) {\n                    address += fi.profile.country;\n                }\n            }\n            return address;\n        });\n        initField(\"fid\");\n        initField(\"org\");\n        initField(\"ofx\");\n        this.setState(state);\n    };\n    return AccountDialogClass;\n})(React.Component);\nexports.AccountDialogClass = AccountDialogClass;\nexports.AccountDialog = React.createFactory(AccountDialogClass);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./components/accountDialog.ts\n ** module id = 119\n ** module chunks = 0\n **/","/// <reference path=\"../project.d.ts\"/>\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar XEditableClass = (function (_super) {\n    __extends(XEditableClass, _super);\n    function XEditableClass() {\n        _super.apply(this, arguments);\n    }\n    XEditableClass.prototype.render = function () {\n        return React.DOM.a({\n            href: \"#\",\n            ref: \"a\"\n        }, this.props.children);\n    };\n    XEditableClass.prototype.componentDidMount = function () {\n        var $a = $(React.findDOMNode(this.refs[\"a\"]));\n        this.props.unsavedclass = null;\n        $a.editable(this.props);\n        $a.on('save', this.onSave);\n    };\n    XEditableClass.prototype.onSave = function () {\n        var $a = $(React.findDOMNode(this.refs[\"a\"]));\n        $a.removeClass('editable-unsaved');\n        if (this.props.onSave) {\n            this.props.onSave();\n        }\n    };\n    return XEditableClass;\n})(React.Component);\nvar XSelectClass = (function (_super) {\n    __extends(XSelectClass, _super);\n    function XSelectClass(props) {\n        props.type = \"select\";\n        _super.call(this, props);\n    }\n    return XSelectClass;\n})(XEditableClass);\nexports.XSelectClass = XSelectClass;\nvar XTextClass = (function (_super) {\n    __extends(XTextClass, _super);\n    function XTextClass(props) {\n        props.type = \"text\";\n        _super.call(this, props);\n    }\n    return XTextClass;\n})(XEditableClass);\nexports.XTextClass = XTextClass;\nexports.XSelect = React.createFactory(XSelectClass);\nexports.XText = React.createFactory(XTextClass);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./components/xeditable.ts\n ** module id = 211\n ** module chunks = 0\n **/","///<reference path=\"project.d.ts\"/>\nvar EnumEx = (function () {\n    function EnumEx() {\n    }\n    EnumEx.getNames = function (e) {\n        var a = [];\n        for (var val in e) {\n            if (isNaN(val)) {\n                a.push(val);\n            }\n        }\n        return a;\n    };\n    EnumEx.getValues = function (e) {\n        var a = [];\n        for (var val in e) {\n            if (!isNaN(val)) {\n                a.push(parseInt(val, 10));\n            }\n        }\n        return a;\n    };\n    EnumEx.map = function (e, cb) {\n        var a = [];\n        for (var val in e) {\n            if (!isNaN(val)) {\n                var value = parseInt(val, 10);\n                var name = e[val];\n                a.push(cb(name, value));\n            }\n        }\n        return a;\n    };\n    EnumEx.each = function (e, cb) {\n        for (var val in e) {\n            if (!isNaN(val)) {\n                var value = parseInt(val, 10);\n                var name = e[val];\n                cb(name, value);\n            }\n        }\n    };\n    return EnumEx;\n})();\nexports.EnumEx = EnumEx;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./enumEx.ts\n ** module id = 212\n ** module chunks = 0\n **/"],"sourceRoot":"","file":"ezm.js"}